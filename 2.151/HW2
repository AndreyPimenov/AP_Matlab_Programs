clc
clear all
close all
global P Q;             % pass parameters to the function called below

%% Initial data
% Vehicle elevation, m
height = 2.032; 
% Vertical displacment, m
deltaX0 = 0.0127; 
% Automobile mass, pounds
mass = 1360.77711;
% Cylinder internal diameter, inches
diameter = 0.1016;
% Bulk modulus, kilos per sq m
bulkM = 210920874;
% Peak difference after one period
deltaAmp = 2;

%% Model
% The differential equation
% x'' + bap/m * x' + kap/m * x = f(t)
% or
% x'' + 2*gamma*omega * x' + omega^2 * x = f(t)
% Lets find the coefficients

% Logarifmic decrement
deltaLog = log(deltaAmp);
% Damping ratio
gamma = deltaLog / sqrt((2*pi)^2 + deltaLog^2);
% Apparent stiffness
kapp = bulkM*pi*diameter^2 / (4*height);
% Pseudo frequency
pseudoEigenfreq = sqrt(kapp/mass);
% Apparent damping
bapp = 2*gamma*pseudoEigenfreq*mass;
% System parameters
P = -kapp/mass;
Q = -bapp/mass;

% Starting state (replace with your code)
x10 = deltaX0;
x20 = 0;

% Nominal simulation time (replace with your code)
tsim = 2;

% Define the simulation time vector
sfrq = 500;    % sampling frequency
tvec = (0:1:sfrq*tsim)/sfrq;

% Initial state vector (replace with your code)
x0 = [ x10; x20 ];
% Use ode45 to integrate the state equations
[t, x] = ode45('HW2_Problem3_Function', tvec, x0);

% Lets specify nonlinear equation


% Extract states (just for readability)
x1 = x(:,1);
x2 = x(:,2);
                  
% Plot results as needed. Here's a state-space trajectory:
figure('Color', [1 1 1])
subplot(2,1,1)
plot(x1, x2, 'b')
xlabel('x_1')
ylabel('x_2')
title('State-Space Trajectory')
grid on
subplot(2,1,2)
plot(t, x1, 'b')
title('Time dependence')
grid on
xlabel('time, sec')
ylabel('x, m')

...................................................

function xdot = model_template(~,x)
global P Q

% Template for state equations. Neville Hogan

% Extract states (just for readability)
x1 = x(1);
x2 = x(2);

% State equations (replace with your code)
x1dot = 0*x1 + 1*x2;
x2dot = P*x1 + Q*x2;

% Return the state derivatives to the ODE solver
xdot = [x1dot; x2dot];
